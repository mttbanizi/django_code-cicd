name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - name: Clear Python cache
      run: |
        echo "Clearing Python cache..."
        sudo rm -rf /opt/hostedtoolcache/Python-*
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run Tests
      run: |
        pytest -v
      continue-on-error: true

    - name: Archive Test Artifacts
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: allure_results
        path: allure_results
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      run: |
        echo "login to $HUB_URL"
        docker login --username $HUB_USER --password $HUB_PASSWORD https://$HUB_URL

    - name: Build Docker Image
      run: |
        echo "docker build backend image"
        docker build -t $HUB_URL/backend/backend:latest .

        echo "docker push backend image"
        docker push $HUB_URL/backend/backend:latest

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Deploy to Production
      run: |
        chmod 400 $SSH_PRIVATE_KEY
        echo "deploy to production"
        ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY root@37.32.15.138 "
          cd /var/django-ci-cd-config/ &&
          docker-compose pull &&
          docker-compose up -d"
